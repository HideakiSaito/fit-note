{
  "name": "hubot-heroku-keepalive",
  "description": "A hubot script that keeps the hubot Heroko web dyno alive",
  "version": "1.0.2",
  "author": {
    "name": "Josh Nichols",
    "email": "technicalpickles@github.com"
  },
  "license": "MIT",
  "keywords": [
    "hubot",
    "hubot-scripts",
    "heroku"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/hubot-scripts/hubot-heroku-keepalive.git"
  },
  "bugs": {
    "url": "https://github.com/hubot-scripts/hubot-heroku-keepalive/issues"
  },
  "dependencies": {},
  "peerDependencies": {
    "hubot": "2.x"
  },
  "devDependencies": {
    "hubot": "2.x",
    "mocha": "*",
    "chai": "*",
    "sinon-chai": "*",
    "sinon": "*",
    "grunt-mocha-test": "~0.7.0",
    "grunt-release": "~0.6.0",
    "matchdep": "~0.1.2",
    "grunt-contrib-watch": "~0.5.3"
  },
  "main": "index.coffee",
  "scripts": {
    "test": "grunt test"
  },
  "readme": "# hubot-heroku-keepalive\n\nA hubot script that keeps the hubot Heroku free web dyno alive.\n\nNote that a [free Heroku dyno can only run for 18 hours/day](https://blog.heroku.com/archives/2015/5/7/new-dyno-types-public-beta#hobby-and-free-dynos), so it will be required to sleep for at least 6 hours. Accessing your Hubot during a sleep period will wake it, but it will return to sleep after 30 minutes.\n\n## Installation\n\nIn hubot project repository, run:\n\n`npm install hubot-heroku-keepalive --save`\n\nThen add **hubot-heroku-keepalive** to your `external-scripts.json`:\n\n```json\n[\n  \"hubot-heroku-keepalive\"\n]\n```\n\n## Configuring\n\nhubot-heroku-keepalive is configured by four environment variables:\n\n* `HUBOT_HEROKU_KEEPALIVE_URL` - required, the complete URL to keepalive, including a trailing slash.\n* `HUBOT_HEROKU_WAKEUP_TIME` - optional,  the time of day (HH:MM) when hubot should wake up.  Default: 6:00 (6 am)\n* `HUBOT_HEROKU_SLEEP_TIME` - optional, the time of day (HH:MM) when hubot should go to sleep. Default: 22:00 (10 pm)\n* `HUBOT_HEROKU_KEEPALIVE_INTERVAL` - the interval in which to keepalive, in minutes. Default: 5\n\nYou *must* set `HUBOT_HEROKU_KEEPALIVE_URL` and it *must* include a trailing slash â€“ otherwise the script won't run. \nYou can find out the value for this by running `heroku apps:info`. Copy the `Web URL` and run:\n\n```\nheroku config:set HUBOT_HEROKU_KEEPALIVE_URL=PASTE_WEB_URL_HERE\n```\n\nIf you want to trust a shell snippet from the Internet, here's a one-liner:\n\n```\nheroku config:set HUBOT_HEROKU_KEEPALIVE_URL=$(heroku apps:info -s | grep web-url | cut -d= -f2)\n```\n\n`HUBOT_HEROKU_WAKEUP_TIME` and `HUBOT_HEROKU_SLEEP_TIME` define the waking hours - between these times the keepalive will ping your Heroku app.  Outside of those times, the ping will be suppressed, allowing the dyno to shut down. These times are based on the timezone of your Heroku application which defaults to UTC.  You can change this with:\n\n```\nheroku config:add TZ=\"America/New_York\"\n```\n\n## Waking Hubot Up\n\nThis script will keep the dyno alive once it is awake, but something needs to wake it up. You can use the [Heroku Scheduler](https://devcenter.heroku.com/articles/scheduler) to wake the dyno up. Add the scheduler addon by running:\n\n```\nheroku addons:create scheduler:standard\n```\n\nThe scheduler must be manually configured from the web interface, so run `heroku addons:open scheduler` and configure it to run `curl ${HUBOT_HEROKU_KEEPALIVE_URL}heroku/keepalive` at the time configured for `HUBOT_HEROKU_WAKEUP_TIME`.\n\n![Heroku Scheduler Screenshot](https://cloud.githubusercontent.com/assets/173/9414275/2e4b67ea-4805-11e5-80d0-d6b26ead50ef.png)\n\nNote that the Scheduler's time is in UTC. If you changed your application's timezone with `TZ`, you'll need to convert that time to UTC for the wakup job. For example, if `HUBOT_HEROKU_WAKEUP_TIME` is set to `06:00` and `TZ` is set to `America/New_York`, you'll need to set the Scheduler to run at 10:00 AM UTC.\n\n## Legacy Support\n\nHubot has for a long time had it's own builtin way to keep its web dyno alive,\nbut this is an extraction of that behavior.\n\nThe legacy support uses the `HEROKU_URL` environment variable instead of\n`HUBOT_HEROKU_KEEPALIVE_URL`, so for forward compatability,\nhubot-heroku-keepalive will also use HEROKU_URL if it's present, and will\nalso disable the legacy keepalive behavior if it's present.\n\n## Development\n\nThe best way is to use `npm link` and make sure to point HUBOT_HEROKU_KEEPALIVE_URL at the right place:\n\n```\nhubot-heroku-keepalive$ npm link\nhubot-heroku-keepalive$ cd /path/to/your/hubot\nhubot$ npm link hubot-heroku-keepalive\nhubot$ export HUBOT_HEROKU_KEEPALIVE_URL=http://localhost:8080/\nhubot$ bin/hubot\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/hubot-scripts/hubot-heroku-keepalive",
  "_id": "hubot-heroku-keepalive@1.0.2",
  "dist": {
    "shasum": "9c41ad981c0db14c8571a3de647addb9e8a21574"
  },
  "_from": "hubot-heroku-keepalive@",
  "_resolved": "https://registry.npmjs.org/hubot-heroku-keepalive/-/hubot-heroku-keepalive-1.0.2.tgz"
}
